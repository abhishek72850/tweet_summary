# Generated by Django 2.2.7 on 2020-09-14 08:13

import app_perf.models
from django.db import migrations, models
import django.db.models.deletion


def populate_subscription_plan(apps, schema_editor):
    SubscriberPlanModel = apps.get_model("app_perf", "SubscriberPlanModel")
    SubscriberPlanModel.objects.get_or_create(
        id=1,
        plan_name='BASIC',
        plan_duration='7',
        topic_quota='10',
        subscription_period_max_days='7',
        quick_analysis_quota='30',
    )
    SubscriberPlanModel.objects.get_or_create(
        id=2,
        plan_name='SILVER',
        plan_duration='30',
        topic_quota='35',
        subscription_period_max_days='30',
        quick_analysis_quota='110',
    )
    SubscriberPlanModel.objects.get_or_create(
        id=3,
        plan_name='GOLD',
        plan_duration='90',
        topic_quota='100',
        subscription_period_max_days='90',
        quick_analysis_quota='300',
    )
    SubscriberPlanModel.objects.get_or_create(
        id=4,
        plan_name='PLATINUM',
        plan_duration='365',
        topic_quota='400',
        subscription_period_max_days='365',
        quick_analysis_quota='1000',
    )
    SubscriberPlanModel.objects.get_or_create(
        id=5,
        plan_name='TEST',
        plan_duration='1',
        topic_quota='1',
        subscription_period_max_days='1',
        quick_analysis_quota='4',
    )


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriberPlanModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('plan_name', models.CharField(max_length=100)),
                ('plan_duration', models.IntegerField()),
                ('topic_quota', models.IntegerField()),
                ('subscription_period_max_days', models.IntegerField()),
                ('quick_analysis_quota', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'subscriber_plan',
            },
            bases=(models.Model, app_perf.models.GeneralObject),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, app_perf.models.GeneralObject),
        ),
        migrations.CreateModel(
            name='Admins',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app_perf.User')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('app_perf.user', models.Model),
        ),
        migrations.CreateModel(
            name='Subscribers',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app_perf.User')),
                ('email_verified', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, default='PENDING_VERIFICATION', max_length=64)),
                ('plan_subscribed_at', models.DateTimeField(blank=True, null=True)),
                ('plan_status', models.CharField(blank=True, default='NOT_ASSIGNED', max_length=64)),
                ('quick_analysis_counter', models.IntegerField(default=0)),
                ('timezone_offset', models.IntegerField(default=0)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('plan_subscribed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_perf.SubscriberPlanModel')),
            ],
            options={
                'abstract': False,
            },
            bases=('app_perf.user', models.Model),
        ),
        migrations.CreateModel(
            name='UserPlanHistoryModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('plan_started_from', models.DateTimeField(blank=True)),
                ('payment_id', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_mode', models.CharField(blank=True, max_length=64, null=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='plan_history', to='app_perf.SubscriberPlanModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_perf.Subscribers')),
            ],
            options={
                'db_table': 'user_plan_history',
            },
            bases=(models.Model, app_perf.models.GeneralObject),
        ),
        migrations.CreateModel(
            name='UpcomingPlanModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('plan_starts_from', models.DateTimeField(blank=True)),
                ('status', models.CharField(blank=True, default='IN_QUEUE', max_length=64)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='plan', to='app_perf.SubscriberPlanModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_perf.Subscribers')),
            ],
            options={
                'db_table': 'upcoming_plan',
            },
            bases=(models.Model, app_perf.models.GeneralObject),
        ),
        migrations.CreateModel(
            name='SubscriptionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('topic', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subscription_from', models.DateTimeField(blank=True)),
                ('subscription_to', models.DateTimeField(blank=True)),
                ('subscription_status', models.CharField(blank=True, default='IDLE', max_length=64)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_perf.Subscribers')),
            ],
            options={
                'db_table': 'subscription',
            },
            bases=(models.Model, app_perf.models.GeneralObject),
        ),
        migrations.CreateModel(
            name='PlanChangeRequestModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, default='REQUESTED', max_length=64)),
                ('new_plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='new_plan', to='app_perf.SubscriberPlanModel')),
                ('old_plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='old_plan', to='app_perf.SubscriberPlanModel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app_perf.Subscribers')),
            ],
            options={
                'db_table': 'plan_change_request',
            },
            bases=(models.Model, app_perf.models.GeneralObject),
        ),
        migrations.RunPython(populate_subscription_plan)
    ]
